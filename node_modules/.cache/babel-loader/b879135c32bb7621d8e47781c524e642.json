{"ast":null,"code":"var _jsxFileName = \"/Users/pakel/Downloads/01-starting-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const api_url = 'https://www.boredapi.com/api/activity';\n  const [courseGoals, setCourseGoals] = useState([{\n    text: 'Do all exercises!',\n    id: 'g1'\n  }, {\n    text: 'Finish the course!',\n    id: 'g2'\n  }]);\n  const [fetchData, setFetchData] = useState('');\n  useEffect(() => {\n    fetch(api_url).then(res => {\n      console.log(res);\n      console.log(res.json());\n      return res.json();\n    }).then(data => {\n      setFetchData(data.activity);\n    });\n  }, []);\n\n  const addGoalHandler = enteredText => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({\n        text: enteredText,\n        id: Math.random().toString()\n      });\n      return updatedGoals;\n    });\n  };\n\n  const deleteItemHandler = goalId => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n      return updatedGoals;\n    });\n  };\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: \"No goals found. Maybe add one?\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n\n  if (courseGoals.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(CourseGoalList, {\n      items: courseGoals,\n      onDeleteItem: deleteItemHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"goal-form\",\n      children: /*#__PURE__*/_jsxDEV(CourseInput, {\n        onAddGoal: addGoalHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"goals\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ZoPdrGjx9F/t6XBD4ibst1z3bLo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pakel/Downloads/01-starting-project/src/App.js"],"names":["useState","useEffect","CourseGoalList","CourseInput","App","api_url","courseGoals","setCourseGoals","text","id","fetchData","setFetchData","fetch","then","res","console","log","json","data","activity","addGoalHandler","enteredText","prevGoals","updatedGoals","unshift","Math","random","toString","deleteItemHandler","goalId","filter","goal","content","textAlign","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,cAAP,MAA2B,wDAA3B;AACA,OAAOC,WAAP,MAAwB,kDAAxB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAG,uCAAhB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAC7C;AAAEQ,IAAAA,IAAI,EAAE,mBAAR;AAA6BC,IAAAA,EAAE,EAAE;AAAjC,GAD6C,EAE7C;AAAED,IAAAA,IAAI,EAAE,oBAAR;AAA8BC,IAAAA,EAAE,EAAE;AAAlC,GAF6C,CAAD,CAA9C;AAKA,QAAK,CAACC,SAAD,EAAWC,YAAX,IAA2BX,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,KAAK,CAACP,OAAD,CAAL,CACCQ,IADD,CACMC,GAAG,IAAE;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,EAAZ;AACA,aAAOH,GAAG,CAACG,IAAJ,EAAP;AACD,KALD,EAMCJ,IAND,CAMMK,IAAI,IAAE;AACVP,MAAAA,YAAY,CAACO,IAAI,CAACC,QAAN,CAAZ;AACD,KARD;AAUD,GAXQ,EAWP,EAXO,CAAT;;AAaA,QAAMC,cAAc,GAAGC,WAAW,IAAI;AACpCd,IAAAA,cAAc,CAACe,SAAS,IAAI;AAC1B,YAAMC,YAAY,GAAG,CAAC,GAAGD,SAAJ,CAArB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB;AAAEhB,QAAAA,IAAI,EAAEa,WAAR;AAAqBZ,QAAAA,EAAE,EAAEgB,IAAI,CAACC,MAAL,GAAcC,QAAd;AAAzB,OAArB;AACA,aAAOJ,YAAP;AACD,KAJa,CAAd;AAKD,GAND;;AAQA,QAAMK,iBAAiB,GAAGC,MAAM,IAAI;AAClCtB,IAAAA,cAAc,CAACe,SAAS,IAAI;AAC1B,YAAMC,YAAY,GAAGD,SAAS,CAACQ,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACtB,EAAL,KAAYoB,MAArC,CAArB;AACA,aAAON,YAAP;AACD,KAHa,CAAd;AAID,GALD;;AAOA,MAAIS,OAAO,gBACT;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAIA,MAAI3B,WAAW,CAAC4B,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BF,IAAAA,OAAO,gBACL,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAE1B,WAAvB;AAAoC,MAAA,YAAY,EAAEsB;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBACE;AAAA,4BACE;AAAS,MAAA,EAAE,EAAC,WAAZ;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAER;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAS,MAAA,EAAE,EAAC,OAAZ;AAAA,gBACGY;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,eAcE;AAAA,gBAAOtB;AAAP;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAjED;;GAAMN,G;;KAAAA,G;AAmEN,eAAeA,GAAf","sourcesContent":["import { useState,useEffect} from 'react';\n\nimport CourseGoalList from './components/CourseGoals/CourseGoalList/CourseGoalList';\nimport CourseInput from './components/CourseGoals/CourseInput/CourseInput';\nimport './App.css';\n\nconst App = () => {\n  const api_url = 'https://www.boredapi.com/api/activity';\n  const [courseGoals, setCourseGoals] = useState([\n    { text: 'Do all exercises!', id: 'g1' },\n    { text: 'Finish the course!', id: 'g2' }\n  ]);\n\n  const[fetchData,setFetchData] = useState('');\n\n  useEffect(()=>{\n    fetch(api_url)\n    .then(res=>{\n      console.log(res);\n      console.log(res.json());\n      return res.json();\n    })\n    .then(data=>{\n      setFetchData(data.activity);\n    }\n    )\n  },[])\n\n  const addGoalHandler = enteredText => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = [...prevGoals];\n      updatedGoals.unshift({ text: enteredText, id: Math.random().toString() });\n      return updatedGoals;\n    });\n  };\n\n  const deleteItemHandler = goalId => {\n    setCourseGoals(prevGoals => {\n      const updatedGoals = prevGoals.filter(goal => goal.id !== goalId);\n      return updatedGoals;\n    });\n  };\n\n  let content = (\n    <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n  );\n\n  if (courseGoals.length > 0) {\n    content = (\n      <CourseGoalList items={courseGoals} onDeleteItem={deleteItemHandler} />\n    );\n  }\n\n  return (\n    <div>\n      <section id=\"goal-form\">\n        <CourseInput onAddGoal={addGoalHandler} />\n      </section>\n      <section id=\"goals\">\n        {content}\n        {/* {courseGoals.length > 0 && (\n          <CourseGoalList\n            items={courseGoals}\n            onDeleteItem={deleteItemHandler}\n          />\n        ) // <p style={{ textAlign: 'center' }}>No goals found. Maybe add one?</p>\n        } */}\n      </section>\n      <span>{fetchData}</span>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}